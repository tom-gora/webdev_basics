@import url(https://fonts.bunny.net/css?family=albert-sans:100,200,300,400,500,600,700,800,900);

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --page-bg: #e9ddd1;
  --card-bg: #fefff8;
  --card-accent-light: #fd9436;
  --card-accent-dark: #d67221;
  --bar-accent-light: #6bd1f4;
  --bar-accent-dark: #2daff1;
  --text-light: #ccccc6;
  --text-dark: #454641;
  --box-shadow: #e8cfb7;
  --scrollbar-light: #f5f5f5;
  --scrollbar-dark: #adadab;
  --error: #b81604;
}

body {
  background: var(--page-bg);
  color: var(--text-light);
  font-family: "albert-sans", Arial, Helvetica, system-ui, sans-serif;
  /* min-width: 100dvw; */
  min-height: 100dvh;
  display: grid;
  place-items: center;
}

.card {
  width: 90vw;
  max-width: 850px;
  max-height: 90dvh;
  border: 3px solid var(--card-accent-dark);
  background: var(--card-bg);
  border-radius: 3px;
  display: flex;
  flex-direction: column;
  gap: 3rem;
  padding-bottom: 2rem;
  box-shadow: 2rem 2rem 0 var(--box-shadow);
}

@media (min-width: 1080px) {
  .card {
    max-width: 680px;
  }
}

.card-title-bar {
  min-height: 6rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--card-accent-light);
}

.card-title-bar h1 {
  color: var(--card-bg);
  font-size: 3rem;
  text-transform: uppercase;
  padding-block: 3rem;
  font-weight: 900;
}

.card-body {
  display: grid;
  margin-right: 2rem;
  place-items: center;
  min-height: 12rem;
  max-height: 22rem;
  overflow: auto;
}

/* mozilla fallback */
.card-body {
  scrollbar-width: 8px;
  scrollbar-color: var(--scrollbar-dark) var(--scrollbar-light);
}

.card-body::-webkit-scrollbar {
  width: 8px;
  background-color: var(--scrollbar-light);
}

.card-body::-webkit-scrollbar-thumb {
  width: 8px;
  background-color: var(--scrollbar-dark);
  border-radius: 100vw;
}

.card-body section.uploads-list {
  height: 100%;
  width: 90%;
  z-index: 10;
}

.uploads-list ul {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.uploads-list li {
  /* background: pink; */
  height: 10rem;
  display: grid;
  grid-template-columns: 6rem 1fr 4rem;
}

.filetype {
  position: relative;
  color: var(--text-light);
  display: flex;
  justify-content: start;
  align-items: center;
}

.filetype ion-icon {
  font-size: 7rem;
  margin-top: -0.75rem;
}

.filetype span {
  font-weight: 700;
  font-size: 1rem;
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  bottom: 50%;
  transform: translate(-50%, 100%);
}

.progress-bar {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: end;
}

.progress-bar span {
  font-size: 2.5rem;
  color: var(--text-light);
}

.progress-bar .bar {
  position: relative;
  border: 4px solid var(--bar-accent-dark);
  border-radius: 4px;
  height: 3rem;
  overflow: hidden;
}

.progress-bar .bar.bar-moving::after {
  animation: barAnimation var(--animation-time) linear forwards;
}

@keyframes barAnimation {
  0% {
    left: -135%;
  }
  100% {
    left: -10%;
  }
}

.progress-bar .bar::after {
  position: absolute;
  top: -0.5rem;
  left: -135%;
  content: "";
  width: 120%;
  height: 3.5rem;
  transform: skew(-45deg);
  background: repeating-linear-gradient(
    90deg,
    var(--bar-accent-dark),
    var(--bar-accent-dark) 5px,
    var(--bar-accent-light) 5px,
    var(--bar-accent-light) 10px
  );
  transition: all 2s linear;
}

.progress-bar .bar .progress-counter {
  position: absolute;
  top: 50%;
  left: -10%;
  transform: translate(-50%, -50%);
  font-size: 2rem;
  color: var(--bar-accent-dark);
  margin-left: 2rem;
  z-index: 200;
}

.progress-bar .bar.bar-moving .progress-counter {
  animation: counterAnimation var(--animation-time) linear forwards;
}

@keyframes counterAnimation {
  0% {
    left: -10%;
  }
  99% {
    left: 115%;
  }
}

.progress-bar .controls {
  display: flex;
  justify-content: end;
  gap: 1rem;
  height: 1.25rem;
  margin-bottom: 0.5rem;
}

.progress-bar .controls button {
  position: relative;
  background: none;
  border: none;
  outline: none;
  color: var(--card-accent-dark);
  font-size: 1.5rem;
  font-weight: 700;
  padding: 0.25rem 0.5rem;
  transition: all 200ms ease-in;
}

.progress-bar .controls button:last-of-type {
  display: none;
}

.progress-bar .controls button::after {
  position: absolute;
  bottom: -1rem;
  left: 0;
  content: "";
  width: 100%;
  border-bottom: 4px solid var(--bar-accent-dark);
  transform: scaleX(0);
  transform-origin: center;
  transition: all 200ms ease-in;
}

.progress-bar .controls button:hover::after,
.progress-bar .controls button:focus::after {
  transform: scaleX(1);
}

.progress-bar .controls button:hover,
.progress-bar .controls button:focus {
  color: var(--bar-accent-dark);
}

.stop-delete {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: end;
  margin-bottom: 2.75rem;
}

.stop-delete ion-icon {
  color: var(--card-accent-dark);
  font-size: 3rem;
  transition: color 200ms ease-in;
}

.stop-delete ion-icon:hover,
.stop-delete ion-icon:focus {
  color: var(--bar-accent-dark);
}

.card-footer {
  min-height: 200px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;
}

.card-footer section.uploader {
  position: relative;
  display: grid;
  place-items: center;
  isolation: isolate;
}

.uploader .drag-and-drop-area {
  /* border: 1px green solid; */
  position: absolute;
  inset-inline: -4rem;
  inset-block: -2rem;
  z-index: 10;
}

.uploader svg {
  height: 80%;
  min-height: 250px;
  position: absolute;
  stroke-width: 2px;
  stroke-dasharray: 5px;
  user-select: none;
  z-index: -1;
}

.uploader svg path {
  opacity: 0.2;
  fill: var(--bar-accent-light);
  stroke: var(--bar-accent-dark);
}

.uploader.active > *:not(.drag-and-drop-area) {
  z-index: -1;
}

.uploader.active svg path {
  opacity: 0.8;
}

.uploader input[type="file"] {
  scale: 0;
}

label[for="file-input"] {
  color: var(--text-dark);
  font-size: 1.25rem;
  font-weight: 500;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  margin-top: 3rem;
  z-index: 10;
}

label[for="file-input"] span {
  display: none;
}

@media all and (min-width: 900px) {
  label[for="file-input"] span {
    display: block;
  }
}

label[for="file-input"] button {
  color: var(--card-bg);
  font-size: 1.5rem;
  text-transform: uppercase;
  font-weight: 900;
  padding: 0.5em 1em;
  background: var(--card-accent-light);
  border: none;
  border-radius: 3px;
  transition: all 200ms ease-out;
}

label[for="file-input"] button:hover {
  box-shadow: 0 0.5rem 0 var(--card-accent-dark);
}

#error-message {
  margin-top: 5rem;
  font-weight: 700;
  text-transform: uppercase;
  color: var(--error);
}
